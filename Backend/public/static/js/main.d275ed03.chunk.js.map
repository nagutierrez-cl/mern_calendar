{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","startChecking","dispatch","a","checkingFinish","expDate","Date","setHours","getHours","resp","json","ok","setItem","getTime","login","uid","name","user","startLogout","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","Swal","fire","errors","placeholder","onChange","msg","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","closeTimeoutMS","style","contentLabel","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","eventdb","_id","eventStartAddNew","format","amPmAriaLabel","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","setInterval","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d275ed03.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchWithoutToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const fetchWithToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; \r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n    \r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Event logout',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events Loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n    \r\n}","import moment from \"moment\";\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n}","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                event.id = body.eventdb.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n\r\n                dispatch( eventAddNew(event) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async(dispatch) => {\r\n        \r\n        try {\r\n\r\n            const resp = await fetchWithToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventUpdated(event) );\r\n            } else {\r\n                Swal.fire('Error', body.errors[0].msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchWithToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.errors[0].msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async ( dispatch ) => {\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.eventos );\r\n\r\n            dispatch( eventLoaded(events) );\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const resp = await fetchWithoutToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n        \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.errors[0], 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const resp = await fetchWithoutToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n        \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.errors[0].msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async ( dispatch ) => {\r\n\r\n        // no hay token\r\n        if(!localStorage.getItem('token')){\r\n            dispatch( checkingFinish() );\r\n            return\r\n        }\r\n\r\n        const expDate = new Date( localStorage.getItem('token-init-date') );\r\n        expDate.setHours(expDate.getHours()+2); \r\n\r\n        const now = new Date();\r\n\r\n        // token expirado\r\n        if( now > expDate ){\r\n            dispatch( checkingFinish() );\r\n            return \r\n        }\r\n\r\n        const resp = await fetchWithToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n        \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: '',\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n    \r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: '',\r\n    });\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    \r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <span>{ title } </span>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useEffect, useState } from 'react'\r\nimport Swal from 'sweetalert2'\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( nowPlus1.toDate() );\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if( activeEvent ) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if ( momentStart.isSameOrAfter(momentEnd) ) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        // Validacion con useState y bootstrap\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        //TODO: grabacion \r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) )\r\n        } else {\r\n            dispatch( eventStartAddNew({ ...formValues }) );\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            closeTimeoutMS={ 200 }\r\n            style={customStyles}\r\n            contentLabel=\"Example Modal\"\r\n        >\r\n            <h1> { activeEvent ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={activeEvent ? start : dateStart}\r\n                        className=\"form-control\"\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={activeEvent ? end : dateEnd}\r\n                        className=\"form-control\"\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                        minDate={ dateStart }\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch( eventClearActiveEvent() );\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClick }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { CalendarModal } from './CalendarModal'\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport 'moment/locale/es';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events'\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' )\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        if ( activeEvent ) {\r\n            dispatch( eventClearActiveEvent() );\r\n        }\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                activeEvent && ( <DeleteEventFab />)\r\n            }\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to=\"/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( !isAuthenticated )\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to=\"/\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( startChecking() );\r\n        \r\n        setInterval(() => {\r\n            console.log('checking');\r\n            dispatch( startChecking() );\r\n            \r\n        },119 * 60 * 1000)\r\n\r\n    }, [dispatch])\r\n\r\n    if ( checking ) {\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen } \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen } \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    \r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n    \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Nico'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n}\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ ...state.events, action.payload ]\r\n            }\r\n\r\n            \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    event => ( event.id === action.payload.id ) ? action.payload : event\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    event => ( event.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n    \r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n    \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\n\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render( <CalendarApp />, document.getElementById('root') );"],"sourceRoot":""}